name: Update Kubernetes Deployment

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: kubernetes
  CLUSTER_NAME: my-cluster
  DEPLOYMENT_NAME: app1  # Name of your existing deployment
  CONTAINER_NAME: app1   # Name of container in your deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push new image
      run: |
        docker build -t ${{ env.ECR_REPOSITORY }} .
        docker tag ${{ env.ECR_REPOSITORY }} ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        echo "IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}" >> $GITHUB_ENV

    - name: Configure Kubernetes access
      run: |
        aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.CLUSTER_NAME }}
        kubectl get nodes  # Verify cluster connection

    - name: Update deployment
      run: |
        # Update the image
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.CONTAINER_NAME }}=${{ env.IMAGE_URI }}
        
        # Verify rollout
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
        
        # Check pods
        kubectl get pods -l app=${{ env.DEPLOYMENT_NAME }}
        
        # Verify service
        kubectl get svc